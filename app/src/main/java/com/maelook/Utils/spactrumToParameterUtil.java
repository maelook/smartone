package com.maelook.Utils;

/**
 * Created by Andrew on 2016/11/15.
 */

public class spactrumToParameterUtil {
    //预定的计算参数数组
    private double[] illuminance = {3.9E-5, 4.28264E-5, 4.69146E-5, 5.15896E-5, 5.71764E-5, 6.4E-5, 7.23442E-5, 8.22122E-5, 9.35082E-5, 1.06136E-4, 1.2E-4, 1.34984E-4, 1.51492E-4, 1.70208E-4, 1.91816E-4, 2.17E-4, 2.46907E-4, 2.8124E-4, 3.1852E-4, 3.57267E-4, 3.96E-4, 4.33715E-4, 4.73024E-4, 5.17876E-4, 5.72219E-4, 6.4E-4, 7.2456E-4, 8.255E-4, 9.4116E-4, 0.00106988, 0.00121, 0.001362091, 0.001530752, 0.001720368, 0.001935323, 0.00218, 0.0024548, 0.002764, 0.0031178, 0.0035264, 0.004, 0.00454624, 0.00515932, 0.00582928, 0.00654616, 0.0073, 0.008086507, 0.00890872, 0.00976768, 0.01066443, 0.0116, 0.01257317, 0.01358272, 0.01462968, 0.01571509, 0.01684, 0.01800736, 0.01921448, 0.02045392, 0.02171824, 0.023, 0.02429461, 0.02561024, 0.02695857, 0.02835125, 0.0298, 0.03131083, 0.03288368, 0.03452112, 0.03622571, 0.038, 0.03984667, 0.041768, 0.043766, 0.04584267, 0.048, 0.05024368, 0.05257304, 0.05498056, 0.05745872, 0.06, 0.06260197, 0.06527752, 0.06804208, 0.07091109, 0.0739, 0.077016, 0.0802664, 0.0836668, 0.0872328, 0.09098, 0.09491755, 0.09904584, 0.1033674, 0.1078846, 0.1126, 0.117532, 0.1226744, 0.1279928, 0.1334528, 0.13902, 0.1446764, 0.1504693, 0.1564619, 0.1627177, 0.1693, 0.1762431, 0.1835581, 0.1912735, 0.199418, 0.20802, 0.2171199, 0.2267345, 0.2368571, 0.2474812, 0.2586, 0.2701849, 0.2822939, 0.2950505, 0.308578, 0.323, 0.3384021, 0.3546858, 0.3716986, 0.3892875, 0.4073, 0.4256299, 0.4443096, 0.4633944, 0.4829395, 0.503, 0.5235693, 0.544512, 0.56569, 0.5869653, 0.6082, 0.6293456, 0.6503068, 0.6708752, 0.6908424, 0.71, 0.7281852, 0.7454636, 0.7619694, 0.7778368, 0.7932, 0.8081104, 0.8224962, 0.8363068, 0.8494916, 0.862, 0.8738108, 0.8849624, 0.8954936, 0.9054432, 0.9148501, 0.9237348, 0.9320924, 0.9399226, 0.9472252, 0.954, 0.9602561, 0.9660074, 0.9712606, 0.9760225, 0.9803, 0.9840924, 0.9874182, 0.9903128, 0.9928116, 0.9949501, 0.9967108, 0.9980983, 0.999112, 0.9997482, 1.0, 0.9998567, 0.9993046, 0.9983255, 0.9968987, 0.995, 0.9926005, 0.9897426, 0.9864444, 0.9827241, 0.9786, 0.9740837, 0.9691712, 0.9638568, 0.9581349, 0.952, 0.9454504, 0.9384992, 0.9311628, 0.9234576, 0.9154, 0.9070064, 0.8982772, 0.8892048, 0.8797816, 0.87, 0.8598613, 0.849392, 0.838622, 0.8275813, 0.8163, 0.8047947, 0.793082, 0.781192, 0.7691547, 0.757, 0.7447541, 0.7324224, 0.7200036, 0.7074965, 0.6949, 0.6822192, 0.6694716, 0.6566744, 0.6438448, 0.631, 0.6181555, 0.6053144, 0.5924756, 0.5796379, 0.5668, 0.5539611, 0.5411372, 0.5283528, 0.5156323, 0.503, 0.4904688, 0.4780304, 0.4656776, 0.4534032, 0.4412, 0.42908, 0.417036, 0.405032, 0.393032, 0.381, 0.3689184, 0.3568272, 0.3447768, 0.3328176, 0.321, 0.3093381, 0.2978504, 0.2865936, 0.2756245, 0.265, 0.2547632, 0.2448896, 0.2353344, 0.2260528, 0.217, 0.2081616, 0.1995488, 0.1911552, 0.1829744, 0.175, 0.1672235, 0.1596464, 0.1522776, 0.1451259, 0.1382, 0.1315003, 0.1250248, 0.1187792, 0.1127691, 0.107, 0.1014762, 0.09618864, 0.09112296, 0.08626485, 0.0816, 0.07712064, 0.07282552, 0.06871008, 0.06476976, 0.061, 0.05739621, 0.05395504, 0.05067376, 0.04754965, 0.04458, 0.04175872, 0.03908496, 0.03656384, 0.03420048, 0.032, 0.02996261, 0.02807664, 0.02632936, 0.02470805, 0.0232, 0.02180077, 0.02050112, 0.01928108, 0.01812069, 0.017, 0.01590379, 0.01483718, 0.01381068, 0.01283478, 0.01192, 0.01106831, 0.01027339, 0.009533311, 0.008846157, 0.00821, 0.007623781, 0.007085424, 0.006591476, 0.006138485, 0.005723, 0.005343059, 0.004995796, 0.004676404, 0.004380075, 0.004102, 0.003838453, 0.003589099, 0.003354219, 0.003134093, 0.002929, 0.002738139, 0.002559876, 0.002393244, 0.002237275, 0.002091, 0.001953587, 0.00182458, 0.00170358, 0.001590187, 0.001484, 0.001384496, 0.001291268, 0.001204092, 0.001122744, 0.001047, 9.7659E-4, 9.11109E-4, 8.50133E-4, 7.93238E-4, 7.4E-4, 6.90083E-4, 6.4331E-4, 5.99496E-4, 5.58455E-4, 5.2E-4, 4.83914E-4, 4.50053E-4, 4.18345E-4, 3.88718E-4, 3.611E-4, 3.35384E-4, 3.1144E-4, 2.89166E-4, 2.68454E-4, 2.492E-4, 2.31302E-4, 2.14686E-4, 1.99288E-4, 1.85048E-4, 1.719E-4, 1.59778E-4, 1.48604E-4, 1.38302E-4, 1.28793E-4, 1.2E-4, 1.1186E-4, 1.04322E-4, 9.73356E-5, 9.08459E-5, 8.48E-5, 7.91467E-5, 7.3858E-5, 6.8916E-5, 6.43027E-5, 6.0E-5, 5.59819E-5, 5.22256E-5, 4.87184E-5, 4.54475E-5, 4.24E-5, 3.9561E-5, 3.69151E-5, 3.44487E-5, 3.21482E-5, 3.0E-5, 2.79913E-5, 2.61136E-5, 2.43602E-5, 2.27246E-5, 2.12E-5, 1.97786E-5, 1.84529E-5, 1.72169E-5, 1.60646E-5, 1.499E-5};
    private double[] X = {0.001368, 0.00150205, 0.001642328, 0.001802382, 0.001995757, 0.002236, 0.002535385, 0.002892603, 0.003300829, 0.003753236, 0.004243, 0.004762389, 0.005330048, 0.005978712, 0.006741117, 0.00765, 0.008751373, 0.01002888, 0.0114217, 0.01286901, 0.01431, 0.01570443, 0.01714744, 0.01878122, 0.02074801, 0.02319, 0.02620736, 0.02978248, 0.03388092, 0.03846824, 0.04351, 0.0489956, 0.0550226, 0.0617188, 0.069212, 0.07763, 0.08695811, 0.09717672, 0.1084063, 0.1207672, 0.13438, 0.1493582, 0.1653957, 0.1819831, 0.198611, 0.21477, 0.2301868, 0.2448797, 0.2587773, 0.2718079, 0.2839, 0.2949438, 0.3048965, 0.3137873, 0.3216454, 0.3285, 0.3343513, 0.3392101, 0.3431213, 0.3461296, 0.34828, 0.3495999, 0.3501474, 0.350013, 0.349287, 0.34806, 0.3463733, 0.3442624, 0.3418088, 0.3390941, 0.3362, 0.3331977, 0.3300411, 0.3266357, 0.3228868, 0.3187, 0.3140251, 0.308884, 0.3032904, 0.2972579, 0.2908, 0.2839701, 0.2767214, 0.2689178, 0.2604227, 0.2511, 0.2408475, 0.2298512, 0.2184072, 0.2068115, 0.19536, 0.1842136, 0.1733273, 0.1626881, 0.1522833, 0.1421, 0.1321786, 0.1225696, 0.1132752, 0.1042979, 0.09564, 0.08729955, 0.07930804, 0.07171776, 0.06458099, 0.05795001, 0.05186211, 0.04628152, 0.04115088, 0.03641283, 0.03201, 0.0279172, 0.0241444, 0.020687, 0.0175404, 0.0147, 0.01216179, 0.00991996, 0.00796724, 0.006296346, 0.0049, 0.003777173, 0.00294532, 0.00242488, 0.002236293, 0.0024, 0.00292552, 0.00383656, 0.00517484, 0.00698208, 0.0093, 0.01214949, 0.01553588, 0.01947752, 0.02399277, 0.0291, 0.03481485, 0.04112016, 0.04798504, 0.05537861, 0.06327, 0.07163501, 0.08046224, 0.08973996, 0.09945645, 0.1096, 0.1201674, 0.1311145, 0.1423679, 0.1538542, 0.1655, 0.1772571, 0.18914, 0.2011694, 0.2133658, 0.2257499, 0.2383209, 0.2510668, 0.2639922, 0.2771017, 0.2904, 0.3038912, 0.3175726, 0.3314384, 0.3454828, 0.3597, 0.3740839, 0.3886396, 0.4033784, 0.4183115, 0.4334499, 0.4487953, 0.464336, 0.480064, 0.4959713, 0.5120501, 0.5282959, 0.5446916, 0.5612094, 0.5778215, 0.5945, 0.6112209, 0.6279758, 0.6447602, 0.6615697, 0.6784, 0.6952392, 0.7120586, 0.7288284, 0.7455188, 0.7621, 0.7785432, 0.7948256, 0.8109264, 0.8268248, 0.8425, 0.8579325, 0.8730816, 0.8878944, 0.9023181, 0.9163, 0.9297995, 0.9427984, 0.9552776, 0.9672179, 0.9786, 0.9893856, 0.9995488, 1.0090892, 1.0180064, 1.0263, 1.0339828, 1.040986, 1.047188, 1.0524668, 1.0567, 1.0597944, 1.0617992, 1.0628068, 1.0629096, 1.0622, 1.0607352, 1.0584435, 1.0552244, 1.0509768, 1.0456, 1.0390369, 1.0313607, 1.0226662, 1.0130477, 1.0026, 0.9913675, 0.9793314, 0.9664916, 0.9528479, 0.9384, 0.923194, 0.907244, 0.890502, 0.87292, 0.8544499, 0.835084, 0.814946, 0.794186, 0.772954, 0.7514, 0.7295836, 0.7075888, 0.6856022, 0.6638104, 0.6424, 0.6215149, 0.6011138, 0.5811052, 0.5613977, 0.5419, 0.5225995, 0.5035464, 0.4847436, 0.4661939, 0.4479, 0.4298613, 0.412098, 0.394644, 0.3775333, 0.3608, 0.3444563, 0.3285168, 0.3130192, 0.2980011, 0.2835, 0.2695448, 0.2561184, 0.2431896, 0.2307272, 0.2187, 0.2070971, 0.1959232, 0.1851708, 0.1748323, 0.1649, 0.1553667, 0.14623, 0.13749, 0.1291467, 0.1212, 0.1136397, 0.106465, 0.09969044, 0.09333061, 0.0874, 0.08190096, 0.07680428, 0.07207712, 0.06768664, 0.0636, 0.05980685, 0.05628216, 0.05297104, 0.04981861, 0.04677, 0.04378405, 0.04087536, 0.03807264, 0.03540461, 0.0329, 0.03056419, 0.02838056, 0.02634484, 0.02445275, 0.0227, 0.02108429, 0.01959988, 0.01823732, 0.01698717, 0.01584, 0.01479064, 0.01383132, 0.01294868, 0.0121292, 0.01135916, 0.01062935, 0.009938846, 0.009288422, 0.008678854, 0.008110916, 0.007582388, 0.007088746, 0.006627313, 0.006195408, 0.005790346, 0.005409826, 0.005052583, 0.004717512, 0.004403507, 0.004109457, 0.003833913, 0.003575748, 0.003334342, 0.003109075, 0.002899327, 0.002704348, 0.00252302, 0.002354168, 0.002196616, 0.00204919, 0.00191096, 0.001781438, 0.00166011, 0.001546459, 0.001439971, 0.001340042, 0.001246275, 0.001158471, 0.00107643, 9.99949E-4, 9.28736E-4, 8.62433E-4, 8.0075E-4, 7.43396E-4, 6.90079E-4, 6.40516E-4, 5.94502E-4, 5.51865E-4, 5.12429E-4, 4.76021E-4, 4.42454E-4, 4.11512E-4, 3.82981E-4, 3.56649E-4, 3.32301E-4, 3.09759E-4, 2.88887E-4, 2.69539E-4, 2.51568E-4, 2.34826E-4, 2.19171E-4, 2.04526E-4, 1.90841E-4, 1.78065E-4, 1.66151E-4, 1.55024E-4, 1.44622E-4, 1.3491E-4, 1.25852E-4, 1.17413E-4, 1.09552E-4, 1.02225E-4, 9.53945E-5, 8.90239E-5, 8.30753E-5, 7.75127E-5, 7.2313E-5, 6.74578E-5, 6.29284E-5, 5.87065E-5, 5.47703E-5, 5.10992E-5, 4.76765E-5, 4.44857E-5, 4.15099E-5};
    private double[] Y = {3.9E-5, 4.28264E-5, 4.69146E-5, 5.15896E-5, 5.71764E-5, 6.4E-5, 7.23442E-5, 8.22122E-5, 9.35082E-5, 1.06136E-4, 1.2E-4, 1.34984E-4, 1.51492E-4, 1.70208E-4, 1.91816E-4, 2.17E-4, 2.46907E-4, 2.8124E-4, 3.1852E-4, 3.57267E-4, 3.96E-4, 4.33715E-4, 4.73024E-4, 5.17876E-4, 5.72219E-4, 6.4E-4, 7.2456E-4, 8.255E-4, 9.4116E-4, 0.00106988, 0.00121, 0.001362091, 0.001530752, 0.001720368, 0.001935323, 0.00218, 0.0024548, 0.002764, 0.0031178, 0.0035264, 0.004, 0.00454624, 0.00515932, 0.00582928, 0.00654616, 0.0073, 0.008086507, 0.00890872, 0.00976768, 0.01066443, 0.0116, 0.01257317, 0.01358272, 0.01462968, 0.01571509, 0.01684, 0.01800736, 0.01921448, 0.02045392, 0.02171824, 0.023, 0.02429461, 0.02561024, 0.02695857, 0.02835125, 0.0298, 0.03131083, 0.03288368, 0.03452112, 0.03622571, 0.038, 0.03984667, 0.041768, 0.043766, 0.04584267, 0.048, 0.05024368, 0.05257304, 0.05498056, 0.05745872, 0.06, 0.06260197, 0.06527752, 0.06804208, 0.07091109, 0.0739, 0.077016, 0.0802664, 0.0836668, 0.0872328, 0.09098, 0.09491755, 0.09904584, 0.1033674, 0.1078846, 0.1126, 0.117532, 0.1226744, 0.1279928, 0.1334528, 0.13902, 0.1446764, 0.1504693, 0.1564619, 0.1627177, 0.1693, 0.1762431, 0.1835581, 0.1912735, 0.199418, 0.20802, 0.2171199, 0.2267345, 0.2368571, 0.2474812, 0.2586, 0.2701849, 0.2822939, 0.2950505, 0.308578, 0.323, 0.3384021, 0.3546858, 0.3716986, 0.3892875, 0.4073, 0.4256299, 0.4443096, 0.4633944, 0.4829395, 0.503, 0.5235693, 0.544512, 0.56569, 0.5869653, 0.6082, 0.6293456, 0.6503068, 0.6708752, 0.6908424, 0.71, 0.7281852, 0.7454636, 0.7619694, 0.7778368, 0.7932, 0.8081104, 0.8224962, 0.8363068, 0.8494916, 0.862, 0.8738108, 0.8849624, 0.8954936, 0.9054432, 0.9148501, 0.9237348, 0.9320924, 0.9399226, 0.9472252, 0.954, 0.9602561, 0.9660074, 0.9712606, 0.9760225, 0.9803, 0.9840924, 0.9874182, 0.9903128, 0.9928116, 0.9949501, 0.9967108, 0.9980983, 0.999112, 0.9997482, 1.0, 0.9998567, 0.9993046, 0.9983255, 0.9968987, 0.995, 0.9926005, 0.9897426, 0.9864444, 0.9827241, 0.9786, 0.9740837, 0.9691712, 0.9638568, 0.9581349, 0.952, 0.9454504, 0.9384992, 0.9311628, 0.9234576, 0.9154, 0.9070064, 0.8982772, 0.8892048, 0.8797816, 0.87, 0.8598613, 0.849392, 0.838622, 0.8275813, 0.8163, 0.8047947, 0.793082, 0.781192, 0.7691547, 0.757, 0.7447541, 0.7324224, 0.7200036, 0.7074965, 0.6949, 0.6822192, 0.6694716, 0.6566744, 0.6438448, 0.631, 0.6181555, 0.6053144, 0.5924756, 0.5796379, 0.5668, 0.5539611, 0.5411372, 0.5283528, 0.5156323, 0.503, 0.4904688, 0.4780304, 0.4656776, 0.4534032, 0.4412, 0.42908, 0.417036, 0.405032, 0.393032, 0.381, 0.3689184, 0.3568272, 0.3447768, 0.3328176, 0.321, 0.3093381, 0.2978504, 0.2865936, 0.2756245, 0.265, 0.2547632, 0.2448896, 0.2353344, 0.2260528, 0.217, 0.2081616, 0.1995488, 0.1911552, 0.1829744, 0.175, 0.1672235, 0.1596464, 0.1522776, 0.1451259, 0.1382, 0.1315003, 0.1250248, 0.1187792, 0.1127691, 0.107, 0.1014762, 0.09618864, 0.09112296, 0.08626485, 0.0816, 0.07712064, 0.07282552, 0.06871008, 0.06476976, 0.061, 0.05739621, 0.05395504, 0.05067376, 0.04754965, 0.04458, 0.04175872, 0.03908496, 0.03656384, 0.03420048, 0.032, 0.02996261, 0.02807664, 0.02632936, 0.02470805, 0.0232, 0.02180077, 0.02050112, 0.01928108, 0.01812069, 0.017, 0.01590379, 0.01483718, 0.01381068, 0.01283478, 0.01192, 0.01106831, 0.01027339, 0.009533311, 0.008846157, 0.00821, 0.007623781, 0.007085424, 0.006591476, 0.006138485, 0.005723, 0.005343059, 0.004995796, 0.004676404, 0.004380075, 0.004102, 0.003838453, 0.003589099, 0.003354219, 0.003134093, 0.002929, 0.002738139, 0.002559876, 0.002393244, 0.002237275, 0.002091, 0.001953587, 0.00182458, 0.00170358, 0.001590187, 0.001484, 0.001384496, 0.001291268, 0.001204092, 0.001122744, 0.001047, 9.7659E-4, 9.11109E-4, 8.50133E-4, 7.93238E-4, 7.4E-4, 6.90083E-4, 6.4331E-4, 5.99496E-4, 5.58455E-4, 5.2E-4, 4.83914E-4, 4.50053E-4, 4.18345E-4, 3.88718E-4, 3.611E-4, 3.35384E-4, 3.1144E-4, 2.89166E-4, 2.68454E-4, 2.492E-4, 2.31302E-4, 2.14686E-4, 1.99288E-4, 1.85048E-4, 1.719E-4, 1.59778E-4, 1.48604E-4, 1.38302E-4, 1.28793E-4, 1.2E-4, 1.1186E-4, 1.04322E-4, 9.73356E-5, 9.08459E-5, 8.48E-5, 7.91467E-5, 7.3858E-5, 6.8916E-5, 6.43027E-5, 6.0E-5, 5.59819E-5, 5.22256E-5, 4.87184E-5, 4.54475E-5, 4.24E-5, 3.9561E-5, 3.69151E-5, 3.44487E-5, 3.21482E-5, 3.0E-5, 2.79913E-5, 2.61136E-5, 2.43602E-5, 2.27246E-5, 2.12E-5, 1.97786E-5, 1.84529E-5, 1.72169E-5, 1.60646E-5, 1.499E-5};
    private double[] Z = {0.006450001, 0.007083216, 0.007745488, 0.008501152, 0.009414544, 0.01054999, 0.0119658, 0.01365587, 0.01558805, 0.01773015, 0.02005001, 0.02251136, 0.02520288, 0.02827972, 0.03189704, 0.03621, 0.04143771, 0.04750372, 0.05411988, 0.06099803, 0.06785001, 0.07448632, 0.08136156, 0.08915364, 0.09854048, 0.1102, 0.1246133, 0.1417017, 0.1613035, 0.1832568, 0.2074, 0.2336921, 0.2626114, 0.2947746, 0.3307985, 0.3713, 0.4162091, 0.4654642, 0.5196948, 0.5795303, 0.6456, 0.7184838, 0.7967133, 0.8778459, 0.959439, 1.0390501, 1.1153673, 1.1884971, 1.2581233, 1.3239295, 1.3856, 1.4426352, 1.4948035, 1.5421903, 1.5848807, 1.62296, 1.6564049, 1.6852959, 1.7098745, 1.7303821, 1.74706, 1.7600446, 1.7696233, 1.7762637, 1.7804334, 1.7826, 1.7829682, 1.7816998, 1.7791982, 1.7758671, 1.77211, 1.7682589, 1.764039, 1.7589438, 1.7524663, 1.7441, 1.7335595, 1.7208581, 1.7059369, 1.6887372, 1.6692, 1.6475286, 1.6234127, 1.5960222, 1.564528, 1.5281, 1.4861114, 1.4395216, 1.38988, 1.3387362, 1.28764, 1.2374223, 1.1878242, 1.138761, 1.090148, 1.0419, 0.9941976, 0.9473473, 0.9014531, 0.8566193, 0.8129501, 0.7705173, 0.7294448, 0.6899136, 0.6521049, 0.6162, 0.5823286, 0.5504162, 0.5203376, 0.4919673, 0.46518, 0.4399246, 0.4161836, 0.3938822, 0.3729459, 0.3533, 0.3348578, 0.3175521, 0.3013375, 0.2861686, 0.272, 0.2588171, 0.2464838, 0.2347718, 0.2234533, 0.2123, 0.2011692, 0.1901196, 0.1792254, 0.1685608, 0.1582, 0.1481383, 0.1383758, 0.1289942, 0.1200751, 0.1117, 0.1039048, 0.09666748, 0.08998272, 0.08384531, 0.07824999, 0.07320899, 0.06867816, 0.06456784, 0.06078835, 0.05725001, 0.05390435, 0.05074664, 0.04775276, 0.04489859, 0.04216, 0.03950728, 0.03693564, 0.03445836, 0.03208872, 0.02984, 0.02771181, 0.02569444, 0.02378716, 0.02198925, 0.0203, 0.01871805, 0.01724036, 0.01586364, 0.01458461, 0.0134, 0.01230723, 0.01130188, 0.01037792, 0.009529306, 0.008749999, 0.0080352, 0.0073816, 0.0067854, 0.0062428, 0.005749999, 0.0053036, 0.0048998, 0.0045342, 0.0042024, 0.0039, 0.0036232, 0.0033706, 0.0031414, 0.0029348, 0.002749999, 0.0025852, 0.0024386, 0.0023094, 0.0021968, 0.0021, 0.002017733, 0.0019482, 0.0018898, 0.001840933, 0.0018, 0.001766267, 0.0017378, 0.0017112, 0.001683067, 0.001650001, 0.001610133, 0.0015644, 0.0015136, 0.001458533, 0.0014, 0.001336667, 0.00127, 0.001205, 0.001146667, 0.0011, 0.0010688, 0.0010494, 0.0010356, 0.0010212, 0.001, 9.6864E-4, 9.2992E-4, 8.8688E-4, 8.4256E-4, 8.0E-4, 7.6096E-4, 7.2368E-4, 6.8592E-4, 6.4544E-4, 6.0E-4, 5.47867E-4, 4.916E-4, 4.354E-4, 3.83467E-4, 3.4E-4, 3.07253E-4, 2.8316E-4, 2.6544E-4, 2.51813E-4, 2.4E-4, 2.29547E-4, 2.2064E-4, 2.1196E-4, 2.02187E-4, 1.9E-4, 1.74213E-4, 1.5564E-4, 1.3596E-4, 1.16853E-4, 1.0E-4, 8.61333E-5, 7.46E-5, 6.5E-5, 5.69333E-5, 5.0E-5, 4.416E-5, 3.948E-5, 3.572E-5, 3.264E-5, 3.0E-5, 2.76533E-5, 2.556E-5, 2.364E-5, 2.18133E-5, 2.0E-5, 1.81333E-5, 1.62E-5, 1.42E-5, 1.21333E-5, 1.0E-5, 7.73333E-6, 5.4E-6, 3.2E-6, 1.33333E-6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};

    //计算后的数据缓存区
    private double xSum;
    private double ySum;
    private double zSum;
    private float XY_x;
    private float XY_y;
    private float UV_u;
    private float UV_v;
    private float Duv;
    private int Pwave;
    private int Dwave;



    //构造时的传感器数据
    private double[] sensorData;

    public spactrumToParameterUtil(double[] sensorData) {
        this.sensorData = sensorData;
        initBuffer();
    }

    private void initBuffer() {
        this.xSum = sumByParameterArray(X,this.sensorData);
        this.ySum = sumByParameterArray(X,this.sensorData);
        this.zSum = sumByParameterArray(X,this.sensorData);
        this.XY_x = (float) (this.xSum / (this.xSum + this.ySum + this.zSum));
        this.XY_y = (float) (this.ySum / (this.xSum + this.ySum + this.zSum));
        this.UV_u = 4*this.XY_x / (-2*this.XY_x + 12*this.XY_y + 3);
        this.UV_v = 9*this.XY_y / (-2*this.XY_x + 12*this.XY_y + 3);
        this.Duv = CountDuv(this.XY_x,this.XY_y);
//        this.Pwave = ;
//        this.Dwave = ;

    }

    private float CountDuv(float xy_x, float xy_y) {
        double u = 4*xy_x / (-2*xy_x + 12*xy_y + 3);
        double v = 6*xy_y / (-2*xy_x + 12*xy_y + 3);
        double Lep = Math.sqrt( (u - 0.292)*(u - 0.292) + (v - 0.24)*(v - 0.24) );
        double a = Math.acos( (u - 2.92)*(u - 2.92) / Lep);
        double k6 = -0.00616793;
        double k5 =  0.0893944;
        double k4 = -0.05179722;
        double k3 =  1.5317403;
        double k2 = -2.4243787;
        double k1 =  1.925865;
        double k0 = -0.471106;
        double Lbb = k6* Math.pow(a,6) + k5*Math.pow(a,5) + k4*Math.pow(a,4) + k3*Math.pow(a,3) + k2*Math.pow(a,2) + k1*Math.pow(a,1) + k0;
        return (float) (Lep - Lbb);
    }

    //TODO 询问是否存在数据遗失现象，需要处理数据异常
    //照度
    public int getIlluminance(double[] sensorData) {
        return sumByParameterArray(illuminance, sensorData);
    }

    //色温
    public int getColorTemperture(double[] sensorData) {

        return 1;
    }

    //显色性
    public int getColorRendering(double[] sensorData) {

        return 1;
    }

    //XY_x
    public float getXY_x(double[] sensorData) {
        double xSum = sumByParameterArray(X, sensorData);
        double ySum = sumByParameterArray(Y, sensorData);
        double zSum = sumByParameterArray(Z, sensorData);
        double xRes = xSum / (xSum + ySum + zSum);
        return (float) xRes;
    }

    //XY_y
    public float getXY_y(double[] sensorData) {
        double xSum = sumByParameterArray(X, sensorData);
        double ySum = sumByParameterArray(Y, sensorData);
        double zSum = sumByParameterArray(Z, sensorData);
        double yRes = ySum / (xSum + ySum + zSum);
        return (float) yRes;
    }

    //UV_u
    public float getUV_u(double[] sensorData) {
        double xSum = sumByParameterArray(X, sensorData);
        double ySum = sumByParameterArray(Y, sensorData);
        double zSum = sumByParameterArray(Z, sensorData);
        double uRes = 4*xSum / (xSum + 15*ySum + 3*zSum);
        return (float) uRes;
    }

    //UV_v
    public float getUV_v(double[] sensorData) {
        double xSum = sumByParameterArray(X, sensorData);
        double ySum = sumByParameterArray(Y, sensorData);
        double zSum = sumByParameterArray(Z, sensorData);
        double vRes = 9*ySum / (xSum + 15*ySum + 3*zSum);
        return (float) vRes;
    }

    //Duv
    public float getDuv(double[] sensorData) {

        return 1;
    }

    //主波长
    public int getDwave(double[] sensorData) {

        return 1;
    }

    //封波长
    public int getPwave(double[] sensorData) {

        return 1;
    }

    //颜色比
    public float getColorRtio(double[] sensorData) {

        return 1;
    }

    //颜色逼真度
    public int getRf(double[] sensorData) {

        return 1;
    }

    //颜色饱和度
    public int getRg(double[] sensorData) {

        return 1;
    }

    //颜色维度
    public float getCOlorDimension(double[] sensorData) {

        return 1;
    }

    //TLCI
    public String getTLCI(double[] sensorData) {

        return "";
    }

    //GAI
    public int getGAI(double[] sensorData) {

        return 1;
    }

    //CQS
    public String getCQS(double[] sensorData) {

        return "";
    }

    //RGB
    public int[] getColorRGB(double[] sensorData) {

        return null;
    }


    public int sumByParameterArray(double[] parameterArray, double[] sensorData) {
        //运算过程中的小数处理问题：由于处理数据众多，小数的政策可能很大的影响数据的结果
        double res = 0.0;
        int i = 0;
        while (i < sensorData.length) {
            res = res + sensorData[i] * parameterArray[i++];
        }
        return (int) res;
    }


    public double getxSum() {
        return this.xSum;
    }

    public double getySum() {
        return this.ySum;
    }

    public double getzSum() {
        return this.zSum;
    }

    public float getXY_x() {
        return this.XY_x;
    }

    public float getXY_y() {
        return this.XY_y;
    }

    public float getUV_u() {
        return this.UV_u;
    }

    public float getUV_v() {
        return this.UV_v;
    }

    public double[] getSensorData() {
        return this.sensorData;
    }
}
